一、缓存
  1.数据分类
    静态数据
    准静态数据
    中间状态数据
  2.加载时机
    启动全量加载
    懒加载-》同步，异步
  3.有效性
    读写币
    命中率
  4.问题
    预加载启动慢
    占用系统内存资源
  5.常见本地缓存
    map
    GuavaCache
    SpringCache
    mybatis中：session，sessionFactory
  6.缓存策略
    容量
    过期
  7.缓存常见问题
    7.1缓存穿透
      大量并发查询不存在的KEY，导致都直接将压力透传到数据库
      解决办法
      1）、缓存空值的KEY，这样第一次不存在也会被加载会记录，下次拿到有这个KEY。
      2）、Bloom过滤或RoaringBitmap 判断KEY是否存在。
      3）、完全以缓存为准，使用 延迟异步加载 的策略2，这样就不会触发更新。
    7.2缓存击穿
      某个KEY失效的时候，正好有大量并发请求访问这个KEY
      解决办法
      1）、KEY的更新操作添加全局互斥锁
      2）、完全以缓存为准，使用 延迟异步加载 的策略2，这样就不会触发更新。
    7.3缓存雪崩
      当某一时刻发生大规模的缓存失效的情况，会有大量的请求进来直接打到数据库，导致数据库压力过大升值宕机。
      解决办法
      1）、更新策略在时间上做到比较均匀。
      2）、使用的热数据尽量分散到不同的机器上。
      3）、多台机器做主从复制或者多副本，实现高可用。
      4）、实现熔断限流机制，对系统进行负载能力控制。
      
二、Redis
    1.redis-benchmark
    2.数据结构
       String
       hash
       list
       set
       sorted set
       bitmaps
       hyperloglogs
       GEO
     3.IO线程：redis6之后多线程
     4.内核处理线程：单线程（redis核心逻辑的实现依据，必不可能改）
     5.使用场景
     6.客户端
        jedis
        lettuce （主流）
        Reddission
     7.高级特性
      事务
      性能优化
      主从复制
      哨兵
      集群 一致性hash算法
      Memcacahed
      内存网格
      
