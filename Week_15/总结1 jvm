一、jvm
        jvm本质上就是一个程序，当它命令行上启动时，就开始执行保存在某字节码中的文件指令。
1. jvm类加载器
        虚拟机把描述类的数据从class文件加载到内存，并对数据进行校验、转换、解析以及格式化，最后形成虚拟机可直接执行的指令，这就是虚拟机的类加载机制。
        1.1生命周期：1加载：找class文件 2验证：验证格式依赖 3准备：静态字段、方法表 4解析：符号解析为引用 5初始化：构造器、静态变量赋值、静态代码块 6使用：执行 7卸载    
        1.2类加载器 1.启动类加载器 2.扩展类加载器 3.应用类加载器 加载器的特点：1.双亲委托 2.负责依赖 3.缓存加载  
2.内存模型
        程序计数器、本地方法栈、线程栈、堆、非堆（元空间、方法区）
        jvm每个线程都只能访问自己的线程栈 方法中使用的数据类型和对象引用地址在栈上存储；    

        本地方法栈：加载的native修饰的方法
        线程栈：每个线程都会分配一块线程栈空间，一个方法会分配一个栈帧，栈帧包含了局部变量表、操作数栈、动态链接和方法出口
        非堆：存class字节码，常量，静态变量，类型信息
        堆：存object对象，分年轻代（1/3）老年代（2/3）;年轻代分eden、survive（from，to）（8：1：1）


3、GC
        串行，并行，并发，cms，G1，Zgc
        3.1.gc收集算法 
                标记清除，复制算法，标记整理，分代算法（新生代使用复制清除-快，老年代使用标记整理-stw）
        3.2.gc判定算法 
                引用计数法 可达性分析法
4、jvm工具
        4.1命令行
                jps看进程
                jstat看gc
                jmap看内存空间
                jstack看线程信息
        4.2图形化
                jconsole，jvisualvm，jmc
