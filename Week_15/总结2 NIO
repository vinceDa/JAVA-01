1.IO模型
  同步阻塞式
  同步非阻塞
  IO多路复用（Netty用的这个）
  信号驱动IO
  异步IO
2.Netty  
  异步的，事件驱动的封装了jdk的nio的一个高性能协议服务端和客户端

  2.1管道
    Channel，ChannelFuture，ChannelPipeline
  2.2.事件
  Event & Handler
  Netty 基于事件驱动，事件和处理器可以关联到入站和出站数据流
    入站事件：
      • 通道激活和停用
      • 读操作事件
      • 异常事件
      • 用户事件
    出站事件：
    • 打开连接
    • 关闭连接
    • 写入数据
    • 刷新数
   
   2.3序列化
    处理网络 IO 时，需要进行序列化和反序列化, 转换 Java 对象与字节流。
    对入站数据进行解码, 基类是 ByteToMessageDecoder。
    对出站数据进行编码, 基类是 MessageToByteEncoder。
   2.4 
   特征：异步，事件驱动，基于NIO（正如上边定义所描述的那样）
   特点总结：高性能的协议服务器:高吞吐，低延迟，低开销，零拷贝，可扩容，松耦合: 网络和业务逻辑分离， 使用方便、可维护性好
   高性能的原因：nio，零拷贝，直接内存重复使用，串行化读写，支持高性能序列化协议
   3API网关
    流量网关：全局流控，日志统计，防SQL注入，防web攻击，黑白名单，加密解密
    业务网关：服务流控，服务降级，服务熔断，负载均衡，服务过滤，权限验证、用户等级策略，业务规则、多级缓存
    
  
  
  
